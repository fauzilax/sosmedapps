// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	helper "sosmedapps/helper"

	mock "github.com/stretchr/testify/mock"
)

// mediaUpload is an autogenerated mock type for the mediaUpload type
type mediaUpload struct {
	mock.Mock
}

// FileUpload provides a mock function with given fields: file
func (_m *mediaUpload) FileUpload(file helper.File) (string, error) {
	ret := _m.Called(file)

	var r0 string
	if rf, ok := ret.Get(0).(func(helper.File) string); ok {
		r0 = rf(file)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(helper.File) error); ok {
		r1 = rf(file)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoteUpload provides a mock function with given fields: url
func (_m *mediaUpload) RemoteUpload(url helper.Url) (string, error) {
	ret := _m.Called(url)

	var r0 string
	if rf, ok := ret.Get(0).(func(helper.Url) string); ok {
		r0 = rf(url)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(helper.Url) error); ok {
		r1 = rf(url)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMediaUpload interface {
	mock.TestingT
	Cleanup(func())
}

// newMediaUpload creates a new instance of mediaUpload. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMediaUpload(t mockConstructorTestingTnewMediaUpload) *mediaUpload {
	mock := &mediaUpload{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
